<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mpd.api.dao.mapper.AllocationInfoMapper">
  <resultMap id="BaseResultMap" type="com.mpd.api.dao.model.AllocationInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="allocation_beginDate" jdbcType="TIMESTAMP" property="allocationBegindate" />
    <result column="allocation_endDate" jdbcType="TIMESTAMP" property="allocationEnddate" />
    <result column="allocation_rate_percentage" jdbcType="DECIMAL" property="allocationRatePercentage" />
    <result column="allocation_state" jdbcType="SMALLINT" property="allocationState" />
    <result column="type" jdbcType="SMALLINT" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_by, create_date, allocation_beginDate, allocation_endDate, allocation_rate_percentage, 
    allocation_state, type
  </sql>
  <select id="selectByExample" parameterType="com.mpd.api.dao.model.AllocationInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mpd_allocation_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mpd_allocation_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from mpd_allocation_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mpd.api.dao.model.AllocationInfoExample">
    delete from mpd_allocation_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mpd.api.dao.model.AllocationInfo">
    insert into mpd_allocation_info (id, create_by, create_date, 
      allocation_beginDate, allocation_endDate, 
      allocation_rate_percentage, allocation_state, 
      type)
    values (#{id,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{allocationBegindate,jdbcType=TIMESTAMP}, #{allocationEnddate,jdbcType=TIMESTAMP}, 
      #{allocationRatePercentage,jdbcType=DECIMAL}, #{allocationState,jdbcType=SMALLINT}, 
      #{type,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mpd.api.dao.model.AllocationInfo">
    insert into mpd_allocation_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="allocationBegindate != null">
        allocation_beginDate,
      </if>
      <if test="allocationEnddate != null">
        allocation_endDate,
      </if>
      <if test="allocationRatePercentage != null">
        allocation_rate_percentage,
      </if>
      <if test="allocationState != null">
        allocation_state,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationBegindate != null">
        #{allocationBegindate,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationEnddate != null">
        #{allocationEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationRatePercentage != null">
        #{allocationRatePercentage,jdbcType=DECIMAL},
      </if>
      <if test="allocationState != null">
        #{allocationState,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mpd.api.dao.model.AllocationInfoExample" resultType="java.lang.Long">
    select count(*) from mpd_allocation_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mpd_allocation_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allocationBegindate != null">
        allocation_beginDate = #{record.allocationBegindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allocationEnddate != null">
        allocation_endDate = #{record.allocationEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allocationRatePercentage != null">
        allocation_rate_percentage = #{record.allocationRatePercentage,jdbcType=DECIMAL},
      </if>
      <if test="record.allocationState != null">
        allocation_state = #{record.allocationState,jdbcType=SMALLINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mpd_allocation_info
    set id = #{record.id,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      allocation_beginDate = #{record.allocationBegindate,jdbcType=TIMESTAMP},
      allocation_endDate = #{record.allocationEnddate,jdbcType=TIMESTAMP},
      allocation_rate_percentage = #{record.allocationRatePercentage,jdbcType=DECIMAL},
      allocation_state = #{record.allocationState,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mpd.api.dao.model.AllocationInfo">
    update mpd_allocation_info
    <set>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationBegindate != null">
        allocation_beginDate = #{allocationBegindate,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationEnddate != null">
        allocation_endDate = #{allocationEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationRatePercentage != null">
        allocation_rate_percentage = #{allocationRatePercentage,jdbcType=DECIMAL},
      </if>
      <if test="allocationState != null">
        allocation_state = #{allocationState,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mpd.api.dao.model.AllocationInfo">
    update mpd_allocation_info
    set create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      allocation_beginDate = #{allocationBegindate,jdbcType=TIMESTAMP},
      allocation_endDate = #{allocationEnddate,jdbcType=TIMESTAMP},
      allocation_rate_percentage = #{allocationRatePercentage,jdbcType=DECIMAL},
      allocation_state = #{allocationState,jdbcType=SMALLINT},
      type = #{type,jdbcType=SMALLINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>