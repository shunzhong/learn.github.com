<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mpd.api.dao.mapper.HouseNotarizationInfoMapper">
  <resultMap id="BaseResultMap" type="com.mpd.api.dao.model.HouseNotarizationInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notarization_date" jdbcType="DATE" property="notarizationDate" />
    <result column="notarization_rate" jdbcType="REAL" property="notarizationRate" />
    <result column="notarization_fee" jdbcType="REAL" property="notarizationFee" />
    <result column="notarization_user_name" jdbcType="VARCHAR" property="notarizationUserName" />
    <result column="notarization_telphone" jdbcType="DECIMAL" property="notarizationTelphone" />
    <result column="notarization_file" jdbcType="VARCHAR" property="notarizationFile" />
    <result column="loan_contract" jdbcType="VARCHAR" property="loanContract" />
    <result column="house_id" jdbcType="INTEGER" property="houseId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, notarization_date, notarization_rate, notarization_fee, notarization_user_name, 
    notarization_telphone, notarization_file, loan_contract, house_id
  </sql>
  <select id="selectByExample" parameterType="com.mpd.api.dao.model.HouseNotarizationInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mpd_house_notarization_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mpd_house_notarization_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mpd_house_notarization_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mpd.api.dao.model.HouseNotarizationInfoExample">
    delete from mpd_house_notarization_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mpd.api.dao.model.HouseNotarizationInfo">
    insert into mpd_house_notarization_info (id, notarization_date, notarization_rate, 
      notarization_fee, notarization_user_name, notarization_telphone, 
      notarization_file, loan_contract, house_id
      )
    values (#{id,jdbcType=INTEGER}, #{notarizationDate,jdbcType=DATE}, #{notarizationRate,jdbcType=REAL}, 
      #{notarizationFee,jdbcType=REAL}, #{notarizationUserName,jdbcType=VARCHAR}, #{notarizationTelphone,jdbcType=DECIMAL}, 
      #{notarizationFile,jdbcType=VARCHAR}, #{loanContract,jdbcType=VARCHAR}, #{houseId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mpd.api.dao.model.HouseNotarizationInfo">
    insert into mpd_house_notarization_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="notarizationDate != null">
        notarization_date,
      </if>
      <if test="notarizationRate != null">
        notarization_rate,
      </if>
      <if test="notarizationFee != null">
        notarization_fee,
      </if>
      <if test="notarizationUserName != null">
        notarization_user_name,
      </if>
      <if test="notarizationTelphone != null">
        notarization_telphone,
      </if>
      <if test="notarizationFile != null">
        notarization_file,
      </if>
      <if test="loanContract != null">
        loan_contract,
      </if>
      <if test="houseId != null">
        house_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="notarizationDate != null">
        #{notarizationDate,jdbcType=DATE},
      </if>
      <if test="notarizationRate != null">
        #{notarizationRate,jdbcType=REAL},
      </if>
      <if test="notarizationFee != null">
        #{notarizationFee,jdbcType=REAL},
      </if>
      <if test="notarizationUserName != null">
        #{notarizationUserName,jdbcType=VARCHAR},
      </if>
      <if test="notarizationTelphone != null">
        #{notarizationTelphone,jdbcType=DECIMAL},
      </if>
      <if test="notarizationFile != null">
        #{notarizationFile,jdbcType=VARCHAR},
      </if>
      <if test="loanContract != null">
        #{loanContract,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mpd.api.dao.model.HouseNotarizationInfoExample" resultType="java.lang.Long">
    select count(*) from mpd_house_notarization_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mpd_house_notarization_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.notarizationDate != null">
        notarization_date = #{record.notarizationDate,jdbcType=DATE},
      </if>
      <if test="record.notarizationRate != null">
        notarization_rate = #{record.notarizationRate,jdbcType=REAL},
      </if>
      <if test="record.notarizationFee != null">
        notarization_fee = #{record.notarizationFee,jdbcType=REAL},
      </if>
      <if test="record.notarizationUserName != null">
        notarization_user_name = #{record.notarizationUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.notarizationTelphone != null">
        notarization_telphone = #{record.notarizationTelphone,jdbcType=DECIMAL},
      </if>
      <if test="record.notarizationFile != null">
        notarization_file = #{record.notarizationFile,jdbcType=VARCHAR},
      </if>
      <if test="record.loanContract != null">
        loan_contract = #{record.loanContract,jdbcType=VARCHAR},
      </if>
      <if test="record.houseId != null">
        house_id = #{record.houseId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mpd_house_notarization_info
    set id = #{record.id,jdbcType=INTEGER},
      notarization_date = #{record.notarizationDate,jdbcType=DATE},
      notarization_rate = #{record.notarizationRate,jdbcType=REAL},
      notarization_fee = #{record.notarizationFee,jdbcType=REAL},
      notarization_user_name = #{record.notarizationUserName,jdbcType=VARCHAR},
      notarization_telphone = #{record.notarizationTelphone,jdbcType=DECIMAL},
      notarization_file = #{record.notarizationFile,jdbcType=VARCHAR},
      loan_contract = #{record.loanContract,jdbcType=VARCHAR},
      house_id = #{record.houseId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mpd.api.dao.model.HouseNotarizationInfo">
    update mpd_house_notarization_info
    <set>
      <if test="notarizationDate != null">
        notarization_date = #{notarizationDate,jdbcType=DATE},
      </if>
      <if test="notarizationRate != null">
        notarization_rate = #{notarizationRate,jdbcType=REAL},
      </if>
      <if test="notarizationFee != null">
        notarization_fee = #{notarizationFee,jdbcType=REAL},
      </if>
      <if test="notarizationUserName != null">
        notarization_user_name = #{notarizationUserName,jdbcType=VARCHAR},
      </if>
      <if test="notarizationTelphone != null">
        notarization_telphone = #{notarizationTelphone,jdbcType=DECIMAL},
      </if>
      <if test="notarizationFile != null">
        notarization_file = #{notarizationFile,jdbcType=VARCHAR},
      </if>
      <if test="loanContract != null">
        loan_contract = #{loanContract,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null">
        house_id = #{houseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mpd.api.dao.model.HouseNotarizationInfo">
    update mpd_house_notarization_info
    set notarization_date = #{notarizationDate,jdbcType=DATE},
      notarization_rate = #{notarizationRate,jdbcType=REAL},
      notarization_fee = #{notarizationFee,jdbcType=REAL},
      notarization_user_name = #{notarizationUserName,jdbcType=VARCHAR},
      notarization_telphone = #{notarizationTelphone,jdbcType=DECIMAL},
      notarization_file = #{notarizationFile,jdbcType=VARCHAR},
      loan_contract = #{loanContract,jdbcType=VARCHAR},
      house_id = #{houseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>