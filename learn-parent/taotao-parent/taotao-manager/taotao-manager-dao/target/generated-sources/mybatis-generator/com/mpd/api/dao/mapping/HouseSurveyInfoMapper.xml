<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mpd.api.dao.mapper.HouseSurveyInfoMapper">
  <resultMap id="BaseResultMap" type="com.mpd.api.dao.model.HouseSurveyInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="house_id" jdbcType="INTEGER" property="houseId" />
    <result column="is_old" jdbcType="SMALLINT" property="isOld" />
    <result column="orientation" jdbcType="VARCHAR" property="orientation" />
    <result column="is_family_known" jdbcType="BIT" property="isFamilyKnown" />
    <result column="house_type" jdbcType="SMALLINT" property="houseType" />
    <result column="building_type" jdbcType="SMALLINT" property="buildingType" />
    <result column="total_floor" jdbcType="INTEGER" property="totalFloor" />
    <result column="house_floor" jdbcType="INTEGER" property="houseFloor" />
    <result column="house_state" jdbcType="SMALLINT" property="houseState" />
    <result column="obtain_way" jdbcType="SMALLINT" property="obtainWay" />
    <result column="living_area_name" jdbcType="VARCHAR" property="livingAreaName" />
    <result column="survey_time" jdbcType="TIMESTAMP" property="surveyTime" />
    <result column="survey_id" jdbcType="VARCHAR" property="surveyId" />
    <result column="is_only_house" jdbcType="BIT" property="isOnlyHouse" />
    <result column="is_frozen" jdbcType="BIT" property="isFrozen" />
    <result column="land_source" jdbcType="VARCHAR" property="landSource" />
    <result column="Is_house_jold" jdbcType="BIT" property="isHouseJold" />
    <result column="is_address_consistent" jdbcType="BIT" property="isAddressConsistent" />
    <result column="house_card_certificate" jdbcType="VARCHAR" property="houseCardCertificate" />
    <result column="house_finding_address" jdbcType="VARCHAR" property="houseFindingAddress" />
    <result column="proprietorship_name" jdbcType="VARCHAR" property="proprietorshipName" />
    <result column="house_survey_ratio" jdbcType="DOUBLE" property="houseSurveyRatio" />
    <result column="house_age" jdbcType="SMALLINT" property="houseAge" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, house_id, is_old, orientation, is_family_known, house_type, building_type, total_floor, 
    house_floor, house_state, obtain_way, living_area_name, survey_time, survey_id, is_only_house, 
    is_frozen, land_source, Is_house_jold, is_address_consistent, house_card_certificate, 
    house_finding_address, proprietorship_name, house_survey_ratio, house_age
  </sql>
  <select id="selectByExample" parameterType="com.mpd.api.dao.model.HouseSurveyInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mpd_house_survey_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mpd_house_survey_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mpd_house_survey_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mpd.api.dao.model.HouseSurveyInfoExample">
    delete from mpd_house_survey_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mpd.api.dao.model.HouseSurveyInfo">
    insert into mpd_house_survey_info (id, house_id, is_old, 
      orientation, is_family_known, house_type, 
      building_type, total_floor, house_floor, 
      house_state, obtain_way, living_area_name, 
      survey_time, survey_id, is_only_house, 
      is_frozen, land_source, Is_house_jold, 
      is_address_consistent, house_card_certificate, 
      house_finding_address, proprietorship_name, 
      house_survey_ratio, house_age)
    values (#{id,jdbcType=INTEGER}, #{houseId,jdbcType=INTEGER}, #{isOld,jdbcType=SMALLINT}, 
      #{orientation,jdbcType=VARCHAR}, #{isFamilyKnown,jdbcType=BIT}, #{houseType,jdbcType=SMALLINT}, 
      #{buildingType,jdbcType=SMALLINT}, #{totalFloor,jdbcType=INTEGER}, #{houseFloor,jdbcType=INTEGER}, 
      #{houseState,jdbcType=SMALLINT}, #{obtainWay,jdbcType=SMALLINT}, #{livingAreaName,jdbcType=VARCHAR}, 
      #{surveyTime,jdbcType=TIMESTAMP}, #{surveyId,jdbcType=VARCHAR}, #{isOnlyHouse,jdbcType=BIT}, 
      #{isFrozen,jdbcType=BIT}, #{landSource,jdbcType=VARCHAR}, #{isHouseJold,jdbcType=BIT}, 
      #{isAddressConsistent,jdbcType=BIT}, #{houseCardCertificate,jdbcType=VARCHAR}, 
      #{houseFindingAddress,jdbcType=VARCHAR}, #{proprietorshipName,jdbcType=VARCHAR}, 
      #{houseSurveyRatio,jdbcType=DOUBLE}, #{houseAge,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mpd.api.dao.model.HouseSurveyInfo">
    insert into mpd_house_survey_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="houseId != null">
        house_id,
      </if>
      <if test="isOld != null">
        is_old,
      </if>
      <if test="orientation != null">
        orientation,
      </if>
      <if test="isFamilyKnown != null">
        is_family_known,
      </if>
      <if test="houseType != null">
        house_type,
      </if>
      <if test="buildingType != null">
        building_type,
      </if>
      <if test="totalFloor != null">
        total_floor,
      </if>
      <if test="houseFloor != null">
        house_floor,
      </if>
      <if test="houseState != null">
        house_state,
      </if>
      <if test="obtainWay != null">
        obtain_way,
      </if>
      <if test="livingAreaName != null">
        living_area_name,
      </if>
      <if test="surveyTime != null">
        survey_time,
      </if>
      <if test="surveyId != null">
        survey_id,
      </if>
      <if test="isOnlyHouse != null">
        is_only_house,
      </if>
      <if test="isFrozen != null">
        is_frozen,
      </if>
      <if test="landSource != null">
        land_source,
      </if>
      <if test="isHouseJold != null">
        Is_house_jold,
      </if>
      <if test="isAddressConsistent != null">
        is_address_consistent,
      </if>
      <if test="houseCardCertificate != null">
        house_card_certificate,
      </if>
      <if test="houseFindingAddress != null">
        house_finding_address,
      </if>
      <if test="proprietorshipName != null">
        proprietorship_name,
      </if>
      <if test="houseSurveyRatio != null">
        house_survey_ratio,
      </if>
      <if test="houseAge != null">
        house_age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="isOld != null">
        #{isOld,jdbcType=SMALLINT},
      </if>
      <if test="orientation != null">
        #{orientation,jdbcType=VARCHAR},
      </if>
      <if test="isFamilyKnown != null">
        #{isFamilyKnown,jdbcType=BIT},
      </if>
      <if test="houseType != null">
        #{houseType,jdbcType=SMALLINT},
      </if>
      <if test="buildingType != null">
        #{buildingType,jdbcType=SMALLINT},
      </if>
      <if test="totalFloor != null">
        #{totalFloor,jdbcType=INTEGER},
      </if>
      <if test="houseFloor != null">
        #{houseFloor,jdbcType=INTEGER},
      </if>
      <if test="houseState != null">
        #{houseState,jdbcType=SMALLINT},
      </if>
      <if test="obtainWay != null">
        #{obtainWay,jdbcType=SMALLINT},
      </if>
      <if test="livingAreaName != null">
        #{livingAreaName,jdbcType=VARCHAR},
      </if>
      <if test="surveyTime != null">
        #{surveyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="surveyId != null">
        #{surveyId,jdbcType=VARCHAR},
      </if>
      <if test="isOnlyHouse != null">
        #{isOnlyHouse,jdbcType=BIT},
      </if>
      <if test="isFrozen != null">
        #{isFrozen,jdbcType=BIT},
      </if>
      <if test="landSource != null">
        #{landSource,jdbcType=VARCHAR},
      </if>
      <if test="isHouseJold != null">
        #{isHouseJold,jdbcType=BIT},
      </if>
      <if test="isAddressConsistent != null">
        #{isAddressConsistent,jdbcType=BIT},
      </if>
      <if test="houseCardCertificate != null">
        #{houseCardCertificate,jdbcType=VARCHAR},
      </if>
      <if test="houseFindingAddress != null">
        #{houseFindingAddress,jdbcType=VARCHAR},
      </if>
      <if test="proprietorshipName != null">
        #{proprietorshipName,jdbcType=VARCHAR},
      </if>
      <if test="houseSurveyRatio != null">
        #{houseSurveyRatio,jdbcType=DOUBLE},
      </if>
      <if test="houseAge != null">
        #{houseAge,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mpd.api.dao.model.HouseSurveyInfoExample" resultType="java.lang.Long">
    select count(*) from mpd_house_survey_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mpd_house_survey_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null">
        house_id = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.isOld != null">
        is_old = #{record.isOld,jdbcType=SMALLINT},
      </if>
      <if test="record.orientation != null">
        orientation = #{record.orientation,jdbcType=VARCHAR},
      </if>
      <if test="record.isFamilyKnown != null">
        is_family_known = #{record.isFamilyKnown,jdbcType=BIT},
      </if>
      <if test="record.houseType != null">
        house_type = #{record.houseType,jdbcType=SMALLINT},
      </if>
      <if test="record.buildingType != null">
        building_type = #{record.buildingType,jdbcType=SMALLINT},
      </if>
      <if test="record.totalFloor != null">
        total_floor = #{record.totalFloor,jdbcType=INTEGER},
      </if>
      <if test="record.houseFloor != null">
        house_floor = #{record.houseFloor,jdbcType=INTEGER},
      </if>
      <if test="record.houseState != null">
        house_state = #{record.houseState,jdbcType=SMALLINT},
      </if>
      <if test="record.obtainWay != null">
        obtain_way = #{record.obtainWay,jdbcType=SMALLINT},
      </if>
      <if test="record.livingAreaName != null">
        living_area_name = #{record.livingAreaName,jdbcType=VARCHAR},
      </if>
      <if test="record.surveyTime != null">
        survey_time = #{record.surveyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.surveyId != null">
        survey_id = #{record.surveyId,jdbcType=VARCHAR},
      </if>
      <if test="record.isOnlyHouse != null">
        is_only_house = #{record.isOnlyHouse,jdbcType=BIT},
      </if>
      <if test="record.isFrozen != null">
        is_frozen = #{record.isFrozen,jdbcType=BIT},
      </if>
      <if test="record.landSource != null">
        land_source = #{record.landSource,jdbcType=VARCHAR},
      </if>
      <if test="record.isHouseJold != null">
        Is_house_jold = #{record.isHouseJold,jdbcType=BIT},
      </if>
      <if test="record.isAddressConsistent != null">
        is_address_consistent = #{record.isAddressConsistent,jdbcType=BIT},
      </if>
      <if test="record.houseCardCertificate != null">
        house_card_certificate = #{record.houseCardCertificate,jdbcType=VARCHAR},
      </if>
      <if test="record.houseFindingAddress != null">
        house_finding_address = #{record.houseFindingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.proprietorshipName != null">
        proprietorship_name = #{record.proprietorshipName,jdbcType=VARCHAR},
      </if>
      <if test="record.houseSurveyRatio != null">
        house_survey_ratio = #{record.houseSurveyRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.houseAge != null">
        house_age = #{record.houseAge,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mpd_house_survey_info
    set id = #{record.id,jdbcType=INTEGER},
      house_id = #{record.houseId,jdbcType=INTEGER},
      is_old = #{record.isOld,jdbcType=SMALLINT},
      orientation = #{record.orientation,jdbcType=VARCHAR},
      is_family_known = #{record.isFamilyKnown,jdbcType=BIT},
      house_type = #{record.houseType,jdbcType=SMALLINT},
      building_type = #{record.buildingType,jdbcType=SMALLINT},
      total_floor = #{record.totalFloor,jdbcType=INTEGER},
      house_floor = #{record.houseFloor,jdbcType=INTEGER},
      house_state = #{record.houseState,jdbcType=SMALLINT},
      obtain_way = #{record.obtainWay,jdbcType=SMALLINT},
      living_area_name = #{record.livingAreaName,jdbcType=VARCHAR},
      survey_time = #{record.surveyTime,jdbcType=TIMESTAMP},
      survey_id = #{record.surveyId,jdbcType=VARCHAR},
      is_only_house = #{record.isOnlyHouse,jdbcType=BIT},
      is_frozen = #{record.isFrozen,jdbcType=BIT},
      land_source = #{record.landSource,jdbcType=VARCHAR},
      Is_house_jold = #{record.isHouseJold,jdbcType=BIT},
      is_address_consistent = #{record.isAddressConsistent,jdbcType=BIT},
      house_card_certificate = #{record.houseCardCertificate,jdbcType=VARCHAR},
      house_finding_address = #{record.houseFindingAddress,jdbcType=VARCHAR},
      proprietorship_name = #{record.proprietorshipName,jdbcType=VARCHAR},
      house_survey_ratio = #{record.houseSurveyRatio,jdbcType=DOUBLE},
      house_age = #{record.houseAge,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mpd.api.dao.model.HouseSurveyInfo">
    update mpd_house_survey_info
    <set>
      <if test="houseId != null">
        house_id = #{houseId,jdbcType=INTEGER},
      </if>
      <if test="isOld != null">
        is_old = #{isOld,jdbcType=SMALLINT},
      </if>
      <if test="orientation != null">
        orientation = #{orientation,jdbcType=VARCHAR},
      </if>
      <if test="isFamilyKnown != null">
        is_family_known = #{isFamilyKnown,jdbcType=BIT},
      </if>
      <if test="houseType != null">
        house_type = #{houseType,jdbcType=SMALLINT},
      </if>
      <if test="buildingType != null">
        building_type = #{buildingType,jdbcType=SMALLINT},
      </if>
      <if test="totalFloor != null">
        total_floor = #{totalFloor,jdbcType=INTEGER},
      </if>
      <if test="houseFloor != null">
        house_floor = #{houseFloor,jdbcType=INTEGER},
      </if>
      <if test="houseState != null">
        house_state = #{houseState,jdbcType=SMALLINT},
      </if>
      <if test="obtainWay != null">
        obtain_way = #{obtainWay,jdbcType=SMALLINT},
      </if>
      <if test="livingAreaName != null">
        living_area_name = #{livingAreaName,jdbcType=VARCHAR},
      </if>
      <if test="surveyTime != null">
        survey_time = #{surveyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="surveyId != null">
        survey_id = #{surveyId,jdbcType=VARCHAR},
      </if>
      <if test="isOnlyHouse != null">
        is_only_house = #{isOnlyHouse,jdbcType=BIT},
      </if>
      <if test="isFrozen != null">
        is_frozen = #{isFrozen,jdbcType=BIT},
      </if>
      <if test="landSource != null">
        land_source = #{landSource,jdbcType=VARCHAR},
      </if>
      <if test="isHouseJold != null">
        Is_house_jold = #{isHouseJold,jdbcType=BIT},
      </if>
      <if test="isAddressConsistent != null">
        is_address_consistent = #{isAddressConsistent,jdbcType=BIT},
      </if>
      <if test="houseCardCertificate != null">
        house_card_certificate = #{houseCardCertificate,jdbcType=VARCHAR},
      </if>
      <if test="houseFindingAddress != null">
        house_finding_address = #{houseFindingAddress,jdbcType=VARCHAR},
      </if>
      <if test="proprietorshipName != null">
        proprietorship_name = #{proprietorshipName,jdbcType=VARCHAR},
      </if>
      <if test="houseSurveyRatio != null">
        house_survey_ratio = #{houseSurveyRatio,jdbcType=DOUBLE},
      </if>
      <if test="houseAge != null">
        house_age = #{houseAge,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mpd.api.dao.model.HouseSurveyInfo">
    update mpd_house_survey_info
    set house_id = #{houseId,jdbcType=INTEGER},
      is_old = #{isOld,jdbcType=SMALLINT},
      orientation = #{orientation,jdbcType=VARCHAR},
      is_family_known = #{isFamilyKnown,jdbcType=BIT},
      house_type = #{houseType,jdbcType=SMALLINT},
      building_type = #{buildingType,jdbcType=SMALLINT},
      total_floor = #{totalFloor,jdbcType=INTEGER},
      house_floor = #{houseFloor,jdbcType=INTEGER},
      house_state = #{houseState,jdbcType=SMALLINT},
      obtain_way = #{obtainWay,jdbcType=SMALLINT},
      living_area_name = #{livingAreaName,jdbcType=VARCHAR},
      survey_time = #{surveyTime,jdbcType=TIMESTAMP},
      survey_id = #{surveyId,jdbcType=VARCHAR},
      is_only_house = #{isOnlyHouse,jdbcType=BIT},
      is_frozen = #{isFrozen,jdbcType=BIT},
      land_source = #{landSource,jdbcType=VARCHAR},
      Is_house_jold = #{isHouseJold,jdbcType=BIT},
      is_address_consistent = #{isAddressConsistent,jdbcType=BIT},
      house_card_certificate = #{houseCardCertificate,jdbcType=VARCHAR},
      house_finding_address = #{houseFindingAddress,jdbcType=VARCHAR},
      proprietorship_name = #{proprietorshipName,jdbcType=VARCHAR},
      house_survey_ratio = #{houseSurveyRatio,jdbcType=DOUBLE},
      house_age = #{houseAge,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>