<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mpd.api.dao.mapper.UserJobInfoMapper">
  <resultMap id="BaseResultMap" type="com.mpd.api.dao.model.UserJobInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="departement" jdbcType="VARCHAR" property="departement" />
    <result column="induction_date" jdbcType="DATE" property="inductionDate" />
    <result column="is_social_insurance" jdbcType="BIT" property="isSocialInsurance" />
    <result column="annual_income" jdbcType="REAL" property="annualIncome" />
    <result column="family_income" jdbcType="REAL" property="familyIncome" />
    <result column="social_insurance_years" jdbcType="SMALLINT" property="socialInsuranceYears" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_phone" jdbcType="VARCHAR" property="companyPhone" />
    <result column="ondustry" jdbcType="VARCHAR" property="ondustry" />
    <result column="colleague_name" jdbcType="VARCHAR" property="colleagueName" />
    <result column="colleague_number" jdbcType="DECIMAL" property="colleagueNumber" />
    <result column="company_address" jdbcType="VARCHAR" property="companyAddress" />
    <result column="job_type" jdbcType="SMALLINT" property="jobType" />
    <result column="job_property" jdbcType="SMALLINT" property="jobProperty" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, position, departement, induction_date, is_social_insurance, annual_income, family_income, 
    social_insurance_years, company_name, company_phone, ondustry, colleague_name, colleague_number, 
    company_address, job_type, job_property
  </sql>
  <select id="selectByExample" parameterType="com.mpd.api.dao.model.UserJobInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mpd_user_job_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mpd_user_job_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from mpd_user_job_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.mpd.api.dao.model.UserJobInfoExample">
    delete from mpd_user_job_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mpd.api.dao.model.UserJobInfo">
    insert into mpd_user_job_info (id, position, departement, 
      induction_date, is_social_insurance, annual_income, 
      family_income, social_insurance_years, company_name, 
      company_phone, ondustry, colleague_name, 
      colleague_number, company_address, job_type, 
      job_property)
    values (#{id,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{departement,jdbcType=VARCHAR}, 
      #{inductionDate,jdbcType=DATE}, #{isSocialInsurance,jdbcType=BIT}, #{annualIncome,jdbcType=REAL}, 
      #{familyIncome,jdbcType=REAL}, #{socialInsuranceYears,jdbcType=SMALLINT}, #{companyName,jdbcType=VARCHAR}, 
      #{companyPhone,jdbcType=VARCHAR}, #{ondustry,jdbcType=VARCHAR}, #{colleagueName,jdbcType=VARCHAR}, 
      #{colleagueNumber,jdbcType=DECIMAL}, #{companyAddress,jdbcType=VARCHAR}, #{jobType,jdbcType=SMALLINT}, 
      #{jobProperty,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mpd.api.dao.model.UserJobInfo">
    insert into mpd_user_job_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="departement != null">
        departement,
      </if>
      <if test="inductionDate != null">
        induction_date,
      </if>
      <if test="isSocialInsurance != null">
        is_social_insurance,
      </if>
      <if test="annualIncome != null">
        annual_income,
      </if>
      <if test="familyIncome != null">
        family_income,
      </if>
      <if test="socialInsuranceYears != null">
        social_insurance_years,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyPhone != null">
        company_phone,
      </if>
      <if test="ondustry != null">
        ondustry,
      </if>
      <if test="colleagueName != null">
        colleague_name,
      </if>
      <if test="colleagueNumber != null">
        colleague_number,
      </if>
      <if test="companyAddress != null">
        company_address,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="jobProperty != null">
        job_property,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="departement != null">
        #{departement,jdbcType=VARCHAR},
      </if>
      <if test="inductionDate != null">
        #{inductionDate,jdbcType=DATE},
      </if>
      <if test="isSocialInsurance != null">
        #{isSocialInsurance,jdbcType=BIT},
      </if>
      <if test="annualIncome != null">
        #{annualIncome,jdbcType=REAL},
      </if>
      <if test="familyIncome != null">
        #{familyIncome,jdbcType=REAL},
      </if>
      <if test="socialInsuranceYears != null">
        #{socialInsuranceYears,jdbcType=SMALLINT},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyPhone != null">
        #{companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="ondustry != null">
        #{ondustry,jdbcType=VARCHAR},
      </if>
      <if test="colleagueName != null">
        #{colleagueName,jdbcType=VARCHAR},
      </if>
      <if test="colleagueNumber != null">
        #{colleagueNumber,jdbcType=DECIMAL},
      </if>
      <if test="companyAddress != null">
        #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=SMALLINT},
      </if>
      <if test="jobProperty != null">
        #{jobProperty,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mpd.api.dao.model.UserJobInfoExample" resultType="java.lang.Long">
    select count(*) from mpd_user_job_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mpd_user_job_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.departement != null">
        departement = #{record.departement,jdbcType=VARCHAR},
      </if>
      <if test="record.inductionDate != null">
        induction_date = #{record.inductionDate,jdbcType=DATE},
      </if>
      <if test="record.isSocialInsurance != null">
        is_social_insurance = #{record.isSocialInsurance,jdbcType=BIT},
      </if>
      <if test="record.annualIncome != null">
        annual_income = #{record.annualIncome,jdbcType=REAL},
      </if>
      <if test="record.familyIncome != null">
        family_income = #{record.familyIncome,jdbcType=REAL},
      </if>
      <if test="record.socialInsuranceYears != null">
        social_insurance_years = #{record.socialInsuranceYears,jdbcType=SMALLINT},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyPhone != null">
        company_phone = #{record.companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.ondustry != null">
        ondustry = #{record.ondustry,jdbcType=VARCHAR},
      </if>
      <if test="record.colleagueName != null">
        colleague_name = #{record.colleagueName,jdbcType=VARCHAR},
      </if>
      <if test="record.colleagueNumber != null">
        colleague_number = #{record.colleagueNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.companyAddress != null">
        company_address = #{record.companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=SMALLINT},
      </if>
      <if test="record.jobProperty != null">
        job_property = #{record.jobProperty,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mpd_user_job_info
    set id = #{record.id,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      departement = #{record.departement,jdbcType=VARCHAR},
      induction_date = #{record.inductionDate,jdbcType=DATE},
      is_social_insurance = #{record.isSocialInsurance,jdbcType=BIT},
      annual_income = #{record.annualIncome,jdbcType=REAL},
      family_income = #{record.familyIncome,jdbcType=REAL},
      social_insurance_years = #{record.socialInsuranceYears,jdbcType=SMALLINT},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_phone = #{record.companyPhone,jdbcType=VARCHAR},
      ondustry = #{record.ondustry,jdbcType=VARCHAR},
      colleague_name = #{record.colleagueName,jdbcType=VARCHAR},
      colleague_number = #{record.colleagueNumber,jdbcType=DECIMAL},
      company_address = #{record.companyAddress,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=SMALLINT},
      job_property = #{record.jobProperty,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mpd.api.dao.model.UserJobInfo">
    update mpd_user_job_info
    <set>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="departement != null">
        departement = #{departement,jdbcType=VARCHAR},
      </if>
      <if test="inductionDate != null">
        induction_date = #{inductionDate,jdbcType=DATE},
      </if>
      <if test="isSocialInsurance != null">
        is_social_insurance = #{isSocialInsurance,jdbcType=BIT},
      </if>
      <if test="annualIncome != null">
        annual_income = #{annualIncome,jdbcType=REAL},
      </if>
      <if test="familyIncome != null">
        family_income = #{familyIncome,jdbcType=REAL},
      </if>
      <if test="socialInsuranceYears != null">
        social_insurance_years = #{socialInsuranceYears,jdbcType=SMALLINT},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyPhone != null">
        company_phone = #{companyPhone,jdbcType=VARCHAR},
      </if>
      <if test="ondustry != null">
        ondustry = #{ondustry,jdbcType=VARCHAR},
      </if>
      <if test="colleagueName != null">
        colleague_name = #{colleagueName,jdbcType=VARCHAR},
      </if>
      <if test="colleagueNumber != null">
        colleague_number = #{colleagueNumber,jdbcType=DECIMAL},
      </if>
      <if test="companyAddress != null">
        company_address = #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=SMALLINT},
      </if>
      <if test="jobProperty != null">
        job_property = #{jobProperty,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mpd.api.dao.model.UserJobInfo">
    update mpd_user_job_info
    set position = #{position,jdbcType=VARCHAR},
      departement = #{departement,jdbcType=VARCHAR},
      induction_date = #{inductionDate,jdbcType=DATE},
      is_social_insurance = #{isSocialInsurance,jdbcType=BIT},
      annual_income = #{annualIncome,jdbcType=REAL},
      family_income = #{familyIncome,jdbcType=REAL},
      social_insurance_years = #{socialInsuranceYears,jdbcType=SMALLINT},
      company_name = #{companyName,jdbcType=VARCHAR},
      company_phone = #{companyPhone,jdbcType=VARCHAR},
      ondustry = #{ondustry,jdbcType=VARCHAR},
      colleague_name = #{colleagueName,jdbcType=VARCHAR},
      colleague_number = #{colleagueNumber,jdbcType=DECIMAL},
      company_address = #{companyAddress,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=SMALLINT},
      job_property = #{jobProperty,jdbcType=SMALLINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>